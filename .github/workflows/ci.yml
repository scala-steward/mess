name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      scala-versions: ${{ steps.set-scala-versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      - id: set-scala-versions
        run: |
          scala213=$(grep "scala2.13" project/Dependencies.scala | sed -E 's/.*= //')
          scala3=$(grep "scala3" project/Dependencies.scala | sed -E 's/.*= //')
          echo "versions={\"scala\": [${scala213}, ${scala3}]}" >> $GITHUB_OUTPUT
  build:
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.scala-versions) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - run: sbt ++${{ matrix.scala }} coverage test coverageReport
      - run: sbt ++${{ matrix.scala }} examples/run
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: false
          verbose: true
  scalafmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - run: sbt scalafmtCheckAll
  scalafix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - run: sbt "scalafixAll --check"
